@model Cafe.Web.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Admin_LayoutPage.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Roles, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="error"></div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="SubmitBtn" value="Save" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<script>
    $("#SubmitBtn").attr("disabled", true);

    $("#Roles").change(function () {
        Checking();
    })
    $("#Username").keyup(function () {
        Checking();
    })

    const Checking = () => {
        var InsertUsername = $("#Username").val();
        var SelectRoles = $("#Roles").val();
        var GetId = $("#UserId").val();

        debugger
        $.ajax({
            type: "POST",
            url: "/Admin/CheckUser",
            data: {
                Id: GetId,
                Username: InsertUsername,
                Role: SelectRoles
            },
            success: function (response) {

                if (response.CheckUser == false) {

                    $("#error").attr('class', 'alert alert-danger text-center').text(response.text);
                    $("#CreateBtn").attr("disabled", true);
                }

                else {
                    $("#error").attr('class', '').text("");
                    $("#CreateBtn").attr("disabled", false);
                }
            }
        })
    }
</script>